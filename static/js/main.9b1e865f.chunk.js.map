{"version":3,"sources":["components/Copyright.js","logo.svg","components/Navbar.js","components/Textform.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Copyright","props","className","author","Navbar","mode","type","to","src","logo","alt","id","href","tabIndex","title","onClick","toggleMode","htmlFor","Textform","useState","text","setText","titleColor","bgColor","style","color","backgroundColor","heading","rows","value","onChange","event","target","newText","toUpperCase","showAlert","split","console","log","join","navigator","clipboard","writeText","filter","e","length","trim","Alert","alert","role","position","zIndex","right","top","msg","About","defaultProps","hi","githubSiteName","App","setAlert","message","setTimeout","setMode","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b1e865f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Copyright(props) {\r\n  let year = \"2021-2022\";\r\n  return (\r\n    <div>\r\n      <p className=\"h5 text-center\">\r\n        Copyright - {props.author} - {year}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"../logo.svg\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div\r\n      className={`navbar navbar-${props.mode} bg-${props.mode} navbar-expand-sm sticky-top`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarTogglerDemo03\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        </Link>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                About Us\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link disabled\" href=\"/\" tabIndex=\"-1\">\r\n                Hello {props.title}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className=\"form-check form-switch\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"darkModeSwitch\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label className=\"form-check-label text-success\" htmlFor=\"darkModeSwitch\">\r\n              Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nNavbar.propTypes = { title: PropTypes.string.isRequired, hi: PropTypes.number };\r\nNavbar.defaultProps = { title: \"Guest\", hi: 101 };\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase\", \"success\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"All text Cleared\", \"success\");\r\n\r\n  };\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    console.log(newText);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces removed\", \"success\");\r\n\r\n  };\r\n  const handleCopy = () =>{\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"All text Copied\", \"success\");\r\n  };\r\n\r\n  const countWords = () => {\r\n    return text.split(/\\n| /).filter((e) => {\r\n      return e !== \"\";\r\n    }).length;\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  // text = \"other text\"; wrong way to change text\r\n  // setText(\"other text\"); // right way to change text\r\n  let titleColor = props.mode === \"dark\" ? \"#d8e6db\" : \"#5a635c\";\r\n  let bgColor = props.mode === \"dark\" ? \"#5a635c\" : \"#d8e6db\";\r\n  return (\r\n    <>\r\n      <div style={{ color: titleColor, backgroundColor: bgColor }}>\r\n        <div className=\"my-3\">\r\n          <label htmlFor=\"myBox\" className=\"form-label display-6\">\r\n            {props.heading}\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-success\" onClick={handleUpClick}>\r\n          Convert to uppercase\r\n        </button>\r\n        <button className=\"btn btn-danger mx-2\" onClick={handleClear}>\r\n          Clear text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>\r\n          Remove extra spaces\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>\r\n          Copy whole textarea\r\n        </button>\r\n      </div>\r\n      <div className=\"container border p-2 my-3\">\r\n        <p className=\"display-5\">Result</p>\r\n        <p>\r\n          Words: {countWords(text)}\r\n          <br />\r\n          Characters: : {text.trim().length}\r\n          <br />\r\n          Time to read: {(text.split(\" \").length - 1) * 0.008} minutes\r\n        </p>\r\n        <p className=\"display-5\">Preview</p>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && (\r\n      <>\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n          style={{ position: \"fixed\", zIndex: \"9999\", right:'10px', top:'10px' }}\r\n        >\r\n          {props.alert.msg}\r\n          {/* <button\r\n            type=\"button\"\r\n            className=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n          > \r\n          </button> */}\r\n        </div>\r\n      </>\r\n    )\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"display-4\">About Us</div>\r\n        <hr />\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n              <button\r\n                className=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n              >\r\n                Accordion Item #1\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\">\r\n                <strong>This is the first item's accordion body.</strong> It is\r\n                shown by default, until the collapse plugin adds the appropriate\r\n                classes that we use to style each element. These classes control\r\n                the overall appearance, as well as the showing and hiding via\r\n                CSS transitions. You can modify any of this with custom CSS or\r\n                overriding our default variables. It's also worth noting that\r\n                just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n              >\r\n                Accordion Item #2\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\">\r\n                <strong>This is the second item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classes that we use to style each element. These\r\n                classes control the overall appearance, as well as the showing\r\n                and hiding via CSS transitions. You can modify any of this with\r\n                custom CSS or overriding our default variables. It's also worth\r\n                noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseThree\"\r\n              >\r\n                Accordion Item #3\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"accordion-collapse collapse\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\">\r\n                <strong>This is the third item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classes that we use to style each element. These\r\n                classes control the overall appearance, as well as the showing\r\n                and hiding via CSS transitions. You can modify any of this with\r\n                custom CSS or overriding our default variables. It's also worth\r\n                noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Copyright from \"./components/Copyright\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Textform from \"./components/Textform\";\r\nimport React, { useState } from \"react\";\r\nimport Alert from \"./components/Alert\";\r\nimport About from \"./components/About\";\r\n// FOR ROUTER PURPOSE IMPORT BELOEW\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\nconst githubSiteName = \"/f-react-11\";\r\n\r\nlet name = \"Shivam Kumar\";\r\nfunction App() {\r\n  const [alert, setAlert] = useState(null);\r\n  const showAlert = (message, type) => {\r\n    setAlert({ msg: message, type: type });\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 2000);\r\n  };\r\n  const toggleMode = () => {\r\n    mode === \"light\" ? setMode(\"dark\") : setMode(\"light\");\r\n    mode === \"light\"\r\n      ? showAlert(\"Dark Mode Set\", \"success\")\r\n      : showAlert(\"Light mode set\", \"success\");\r\n  };\r\n  const [mode, setMode] = useState(\"light\"); //wether darkmode enabled or not\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid display-5 bg-secondary text-light \">\r\n        My First react app! EXICTED!!\r\n      </div>\r\n      <Alert alert={alert} />\r\n      <div className=\"container\">\r\n        <Router>\r\n          <Navbar mode={mode} toggleMode={toggleMode} />\r\n          <Routes>\r\n            <Route\r\n              exact\r\n              path={`${githubSiteName}/about`}\r\n              element={<About />}\r\n            ></Route>\r\n            <Route\r\n              exact\r\n              path={`${githubSiteName}`}\r\n              element={\r\n                <Textform\r\n                  heading=\"Enter some text: \"\r\n                  mode={mode}\r\n                  showAlert={showAlert}\r\n                />\r\n              }\r\n            ></Route>\r\n          </Routes>\r\n        </Router>\r\n      </div>\r\n\r\n      <Copyright author={name} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}